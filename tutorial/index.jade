.chapter(data-title='Server Notifications and Alerts')
  .step(data-file='app.rb')
    :markdown
      ## What does this thing do?

      This [Sinatra](//www.sinatrarb.com/) sample application
      demonstrates how to send SMS alerts to a list of system
      administrators if something goes wrong on your server. On this
      tutorial we'll show you the key bits of code to make this work.
      Head to the [application's
      README.md](https://github.com/TwilioDevEd/server-notifications-sinatra)
      to see how to run the application locally.

      Let's get started!

      ---

      **See Also:**
      * [Getting started with Sinatra](http://www.sinatrarb.com/intro.html)
      * [Twilio-Ruby library](//www.twilio.com/docs/ruby/install)


  .step(data-file='lib/notifier.rb', data-highlight='11')
    :markdown
      ## Configure Twilio client

      In order to send messages we'll need to create a Twilio REST client which
      requires reading variables `TWILIO_ACCOUNT_SID`, `TWILIO_NUMBER`
      `TWILIO_AUTH_TOKEN` from our enviroment.

      ---

      **See Also:**
      * [Twilio-Node Quickstart](//www.twilio.com/docs/quickstart/ruby/client)
      * [Twilio REST Web Service Interface](//www.twilio.com/docs/api/rest)


  .step(data-file='config/administrators.yml')
    :markdown
      ## List server admins

      Here we create a list of administrators who should be notified if a
      server error occurs.  The only essential piece of data we need is a
      `phone_number` for each administrator.

  .step(data-file='app.rb', data-highlight='19-22')
    :markdown
      ## Handle all the exceptions in the application

      Here we implement error handling and message delivery using
      [Sinatra Errors Handlers](//github.com/sul-dlss/sdr-services-app/blob/master/Sinatra-error-handling.md).
      We will also make all the Twilio API calls from here.

  .step(data-file='lib/notifier.rb', data-highlight='13-17')
    :markdown
      ## Trigger notifications for administrator list

      In our `Notifier` module, we read the admins from our YAML file
      and send alert messages to each one of them with the `sendSms` method in
      `twilioClient`.


  .step(data-file='lib/notifier.rb', data-highlight='20-30')
    :markdown
      ## Send a text message

      There are the three parameters needed to [send an
      SMS](//www.twilio.com/docs/quickstart/ruby/sms/sending-via-rest)
      using the [Twilio REST API](https://www.twilio.com/docs/api/rest): `From`, `To`, and
      `Body`. [US and Canadian phone numbers](https://www.twilio.com/help/faq/sms/is-mms-supported-for-all-carriers-in-us-and-canada)
      can also send an image with the message.

      ---

      **See Also:**
      * [REST API Docs for Message resource](https://www.twilio.com/docs/api/rest/message)
      * [Your message logs in the account portal](https://www.twilio.com/user/account/log/messages)

  .step
    :markdown
      ## Where to next?

      That's it! We've just implemented an automated server notification system
      that can send you server alerts if anything goes wrong. If you're a Ruby
      developer working with Twilio, you might want to check out these other
      tutorials.

      [**Two-Factor Authentication**](https://www.twilio.com/docs/howto/walkthrough/two-factor-authentication/ruby/rails)

      Increase the security of your login system by verifying a user's mobile
      phone in addition to their password.

      [**SMS and MMS marketing notifications**](https://www.twilio.com/docs/howto/walkthrough/marketing-notifications/ruby/rails)

      SMS and MMS messages are a personal way to engage with users, offering
      a much higher open rate than e-mail and more impact than a tweet.

      ### Did this help?

      Thanks for checking out this tutorial! If you have any feedback
      to share with us, we'd love to hear it.
      [Contact support](//www.twilio.com/help/contact) to let us know what you think.
